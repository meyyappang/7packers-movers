USE packers
--LOGIN/REGISTER -Madhan
-- CREATE - CREATE_PROFILE_PROC STORED
-- PROCEDURE FOR INSERT



CREATE TABLE USER_PROFILE(UserId INT PRIMARY KEY,
UserName VARCHAR(50) NOT NULL,Password VARCHAR(20),
EMail VARCHAR(50) NOT NULL, Phone INT NOT NULL,CreatedBy VARCHAR(20) NOT NULL,
CreateDate DATETIME NOT NULL, ModifiedBy VARCHAR(20) NOT NULL, ModifiedDate DATETIME NOT NULL,
RecordStatus BIT NOT NULL, RowGUID VARCHAR(MAX));



INSERT INTO USER_PROFILE VALUES(1001,'Madhan',634512345,'Madhan@GMAIL.COM', 634512345, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
INSERT INTO USER_PROFILE VALUES(1002,'Meyyappa',634512345,'Meyyappa@GMAIL.COM', 342353645, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
INSERT INTO USER_PROFILE VALUES(1003,'Eshwanth',634512345,'Eshwanth@GMAIL.COM', 675768677, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
INSERT INTO USER_PROFILE VALUES(1004,'Agila',634512345,'Agila@GMAIL.COM', 567676576, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
INSERT INTO USER_PROFILE VALUES(1005,'Priya',634512345,'Priya@GMAIL.COM', 879645235, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
INSERT INTO USER_PROFILE VALUES(1006,'Pooja',634512345,'Pooja@GMAIL.COM', 997653322, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
INSERT INTO USER_PROFILE VALUES(1007,'Koushika',634512345,'Koushika@GMAIL.COM', 334665768, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
select * from USER_PROFILE



CREATE PROCEDURE [dbo].[CREATE_PROFILE_PROC]

@UserName VARCHAR(50),
@Password VARCHAR(20),
@EMail VARCHAR(100),
@Phone INT

AS
begin
INSERT INTO USER_PROFILE VALUES(@UserName,@Password,@EMail,@Phone, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
end



-- EXECUTE - CREATE_PROFILE_PROC
EXEC CREATE_PROFILE_PROC 'SAMPLE',232423,'SAMPLE@GMAIL.COM',214354
SELECT * FROM USER_PROFILE
GO

-- CREATE - FORGOT_PSWD_PROC
-- PROCEDURE FOR UPDATE

CREATE PROCEDURE [dbo].[FORGOT_PSWD_PROC]
@UserId INT PRIMARY KEY,
@Password VARCHAR(20)
AS
begin
UPDATE USER_PROFILE SET Password = @Password, ModifiedBy = CURRENT_USER, ModifiedDate = CURRENT_TIMESTAMP WHERE UserId = @UserId
end
-- EXECUTE - FORGOT_PSWD_PROC

EXEC FORGOT_PSWD_PROC 1007,'updated password'
GO


-- CREATE LOGIN_CHECK_PROC
-- PROCEDURE FOR SELECT

CREATE PROCEDURE [dbo].[LOGIN_CHECK_PROC]
@EMAIL VARCHAR(50),
@Password VARCHAR(20)
AS
begin
SELECT * FROM USER_PROFILE WHERE EMail = @EMAIL AND Password = @Password
end

-- EXECUTE - LOGIN_CHECK_PROC
EXEC LOGIN_CHECK_PROC 'Eshwanth@GMAIL.COM', '634512345'
GO

-- CREATE DELETE_USER_PROC
-- PROCEDURE FOR DELETE
CREATE PROCEDURE [dbo].[DELETE_USER_PROC]
@USERID VARCHAR(50)
AS
begin
DELETE FROM USER_PROFILE WHERE UserId = @USERID
end
-- EXECUTE - DELETE_USER_PROC

EXEC DELETE_USER_PROC @USERID=1008
GO

SELECT * FROM USER_PROFILE

--BOOK NOW-ESHWANTH
CREATE TABLE BOOK(
ORDER_ID INT(1O) NOT NULL PRIMARY KEY,
USERID INT(10) FOREIGN KEY REFERENCES FORGOT_PSWD_PROC(USER_ID),
CUS_NAME VARCHAR(30) NOT NULL,
CUS_NUMBER NUMERIC(10,0) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
PACKAGE_WEIGHT NUMERIC(6) NOT NULL,
VEHICLE_TYPE VARCHAR(30) NOT NULL,
FROM_ADDRESS VARCHAR(50) NOT NULL,
FROM_CITY VARCHAR(10) NOT NULL,
TO_ADDRESS VARCHAR(50) NOT NULL,
TO_CITY VARCHAR(10) NOT NULL,
DATE_OF_SHIPMENT DATE NOT NULL,
VEHICLE_ID VARCHAR(MAX) NOT NULL,
BOOKING_ID VARCHAR(11) NOT NULL,
INSURANCE BIT NOT NULL PRIMARY KEY,
STATUS_ID BIT NOT NULL,
ModifiedBy VARCHAR(20) NOT NULL,
ModifiedDate DATETIME NOT NULL,
RecordStatus BIT NOT NULL,
RowGUID VARCHAR(MAX));


-------------------------------------------------------------------------------------------------------
--------------------CREATE---------------------
CREATE PROCEDURE CREATE_BOOK
@C_NAME VARCHAR(30),
@C_NUMBER NUMERIC(10),
@C_EMAIL VARCHAR(50),
@P_WEIGHT NUMERIC(6),
@V_TYPE VARCHAR(30),
@F_ADDRESS VARCHAR(50),
@F_CITY VARCHAR(10),
@T_ADDRESS VARCHAR(50),
@T_CITY VARCHAR(10),
@D_OF_SHIPMENT DATE,
@V_ID VARCHAR(MAX),
@B_ID VARCHAR(11),
@INSURANCE_Y_N BIT

AS
BEGIN
INSERT INTO BOOK VALUES(@C_NAME,@C_NUMBER,@C_EMAIL,@P_WEIGHT, @V_TYPE,@F_ADDRESS,@F_CITY, @T_ADDRESS,@T_CITY,@D_OF_SHIPMENT,@V_ID,@B_ID,@INSURANCE_Y_N,CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID());
END

----------------------------------------------------------------------------------------------------------
------------UPDATE---------------
CREATE PROCEDURE UPD_BOOK_DETAILS
@S_ID BIT,
@C_NAME VARCHAR(30)
AS
BEGIN
UPDATE BOOK SET STATUS_ID=@S_ID, ModifiedBy = CURRENT_USER, ModifiedDate = CURRENT_TIMESTAMP WHERE CUS_NAME=@C_NAME;
END

----------------------------LIST-------------------------------------------------------------------------------------------
CREATE PROCEDURE LIST_BOOK
AS
BEGIN
SELECT * FROM BOOK;
END
--INSURANCE TABLE

CREATE TABLE INSURANCE(
INSURANCE BIT NOT NULL FOREIGN KEY REFERENCES BOOK(INSURANCE),
INSURANCETYPE VARCHAR(20),
INSURANCECOMP VARCHAR(20),
INSURANCEMOU VARCHAR(20),
CREATEDBy VARCHAR(20) NOT NULL,
CREATEDDate DATETIME NOT NULL,
ModifiedBy VARCHAR(20) NOT NULL,
ModifiedDate DATETIME NOT NULL,
RecordStatus BIT NOT NULL,
RowGUID VARCHAR(MAX));



--CONSULT US-PRIYA
CREATE TABLE CONSULT_US
(
CONSULT INT PRIMARY KEY,
USERID INT FOREIGN KEY REFERENCES BOOK(USERID),
CITY VARCHAR(30) NOT NULL,
CUSNAME VARCHAR(10) NOT NULL,
MOBNO NUMERIC(10) NOT NULL,
EMAILID VARCHAR(30) NOT NULL,
PACKAGE_WEIGHT NUMERIC(6) NOT NULL,
VEHICAL_TYPE VARCHAR(30) NOT NULL,
FROM_ADDRESS VARCHAR(50) NOT NULL,
TO_ADDRESS VARCHAR(50) NOT NULL,
STATUS_ID VARCHAR(10),
CreatedBy VARCHAR(20) NOT NULL,
CreateDate DATETIME NOT NULL,
ModifiedBy VARCHAR(20) NOT NULL,
ModifiedDate DATETIME NOT NULL,
RecordStatus BIT NOT NULL,
RowGUID VARCHAR(MAX));


SELECT * FROM CONSULT_US
go
--INSERT
CREATE PROCEDURE CONSULT_US_PROC
@CITY VARCHAR(30),
@CUSNAME VARCHAR(10),
@MOBNO NUMERIC(10),
@EMAILID VARCHAR(30),
@PACKAGE_WEIGHT NUMERIC(6),
@VEHICAL_TYPE VARCHAR(30),
@FROM_ADDRESS VARCHAR(50),
@TO_ADDRESS VARCHAR(50),
@STATUS_ID VARCHAR(10)
AS
begin
INSERT INTO CONSULT_US VALUES(@CITY,@CUSNAME,@MOBNO,@EMAILID,@PACKAGE_WEIGHT,@VEHICAL_TYPE,@FROM_ADDRESS,@TO_ADDRESS,@STATUS_ID,CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
end
-----EXEC
EXEC CONSULT_US_PROC 'TRICHY','SELVI',8840425644,'selvi12@gmail.com',500,'TATA ACE','abcplace','xyzplace','0'
SELECT * FROM CONSULT_US
go

-- PROCEDURE FOR UPDATE
CREATE PROCEDURE [dbo].[STATUS_ID_PROC]
@STATUS_ID VARCHAR(10)
AS
BEGIN
UPDATE CONSULT_US SET STATUS_ID = @STATUS_ID, ModifiedBy = CURRENT_USER, ModifiedDate = CURRENT_TIMESTAMP
END
EXEC STATUS_ID_PROC 1
GO
SELECT * FROM CONSULT_US



--TRACKING -POOJA
create table trackk (tid integer PRIMARY KEY,status varchar(50));

insert into trackk(tid)values(123);
insert into trackk(tid)values(456);
insert into trackk(tid)values(789);
insert into trackk(tid)values(156);

SELECT * FROM trackk;

CREATE procedure track_poo
@ttid INTEGER,
@stat VARCHAR(10) 
as
begin
if EXISTS(SELECT TID FROM trackk WHERE TID=@TTID)
BEGIN
UPDATE trackk SET STATUS=@stat WHERE TID=@TTID
PRINT 'UPDATED STATUS'
END
ELSE
PRINT 'NOT UPDATED'
end;

----EXEC
exec track_poo @ttid=123,@stat='valid';

----LIST
create procedure slt
as
begin
select * from trackk;
end
--EXEC
exec slt;

--CONTACT US-KOUSHIKA
CREATE TABLE CONTACT_DET(
QUERYID INT NOT NULL PRIMARY KEY,
CUS_NAME VARCHAR(20)NOT NULL,
CUS_MAIL_ID VARCHAR(50) NOT NULL,
CUS_MES VARCHAR(100)NOT NULL,
CreatedBy VARCHAR(20) NOT NULL,
CreateDate DATETIME NOT NULL,
ModifiedBy VARCHAR(20) NOT NULL,
ModifiedDate DATETIME NOT NULL,
RecordStatus BIT NOT NULL,
RowGUID VARCHAR(MAX));


SELECT * FROM CONTACT_DET

--------------------INSERT---------------------
CREATE PROCEDURE INSERT_CONTACT_DETAILS
@Q_ID INT,
@C_NAME VARCHAR(10),
@C_EMAIL VARCHAR(50),
@C_MSG VARCHAR(100)
AS
BEGIN
INSERT INTO CONTACT_DET VALUES(@Q_ID,@C_NAME,@C_EMAIL,@C_MSG,CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())
END
---EXEC
EXEC INSERT_CONTACT_DETAILS 101,'AAA','ABC123@GMAIL.COM','MESSAGE1';

SELECT * FROM CONTACT_DET

----------DELETE-------------
CREATE PROCEDURE DELETE_CONTACT_DET
@Q_ID INT
AS
BEGIN
DELETE FROM CONTACT_DET WHERE QUERYID=@Q_ID
END
----EXEC
EXEC DELETE_CONTACT_DET 101

SELECT * FROM CONTACT_DET

------------UPDATE---------------
CREATE PROCEDURE UPD_CONTACT_DETAILS
@Q_ID INT,
@C_MSG VARCHAR(100)
AS
BEGIN
UPDATE CONTACT_DET SET CUS_MES=@C_MSG, ModifiedBy = CURRENT_USER, ModifiedDate = CURRENT_TIMESTAMP WHERE QUERYID=@Q_ID
END
---EXEC
EXEC UPD_CONTACT_DETAILS 101,'update mesg1'

SELECT * FROM CONTACT_DET

-------------LIST---------------
CREATE PROCEDURE CONTACT
AS
BEGIN
SELECT * FROM CONTACT_DET;
END
--exec
EXEC CONTACT

--PROFILE - AGILA
---Read User details--
CREATE PROCEDURE SP_read_UserDetails (@User_ID int)
as
select USERID,USERNAME,PASSWORD,EMAIL,PHONE from USER_PROFILE where USERID=@User_ID

---EXEC --
EXEC SP_read_UserDetails 1004

-- Update user Details--
CREATE PROCEDURE SP_Update_UserDetails (@UserID int,
@USERNAME VARCHAR(30),
@PWD VARCHAR(20),
@EMAIL VARCHAR(50),
@PHONE INT)
as
update USER_PROFILE set UserName=@USERNAME,Password=@PWD,
EMail=@EMAIL,Phone=@PHONE,ModifiedBy=CURRENT_USER,ModifiedDate=CURRENT_TIMESTAMP where UserId=@UserID

---EXEC --
EXEC SP_Update_UserDetails 1004,'AGILa',12754874,'agila@gmail.com',987654321

-- Delete user Details--
CREATE PROCEDURE SP_Delete_UserDetails (@User_ID int)
as
Delete from USER_PROFILE where UserId=@User_ID
--EXEC--
EXEC SP_Delete_UserDetails 1005
SELECT* FROM USER_PROFILE

---TO Read THE LIST OF Order details--
CREATE PROCEDURE SP_list_read_UserDetails
as
select * from USER_PROFILE

--EXEC--
EXEC SP_list_read_UserDetails

----create booking table---
CREATE TABLE BOOK(
ORDER_ID INT NOT NULL,
USERID INT FOREIGN KEY REFERENCES FORGOT_PSWD_PROC(USER_ID),
CUS_NAME VARCHAR(30) NOT NULL,
CUS_NUMBER NUMERIC(10,0) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
PACKAGE_WEIGHT NUMERIC(6) NOT NULL,
VEHICLE_TYPE VARCHAR(30) NOT NULL,
FROM_ADDRESS VARCHAR(50) NOT NULL,
FROM_CITY VARCHAR(10) NOT NULL,
TO_ADDRESS VARCHAR(50) NOT NULL,
TO_CITY VARCHAR(10) NOT NULL,
DATE_OF_SHIPMENT DATE NOT NULL,
VEHICLE_ID VARCHAR(MAX) NOT NULL,
BOOKING_ID VARCHAR(11) NOT NULL,
INSURANCE BIT NOT NULL,
STATUS_ID BIT NOT NULL,
ModifiedBy VARCHAR(20) NOT NULL,
ModifiedDate DATETIME NOT NULL,
RecordStatus BIT NOT NULL,
RowGUID VARCHAR(MAX)
PRIMARY KEY (INSURANCE,ORDER_ID));

select* from book;

insert into book values('Agila',231,'aaa@gail.com',100,'truck','chennai','india',
'london','uk',CURRENT_TIMESTAMP,'7865',101,0,0,CURRENT_USER,CURRENT_TIMESTAMP,1,NEWID())
insert into book values('Agila',231,'aaa@gail.com',100,'truck','chennai','india',
'albama','us',CURRENT_TIMESTAMP,'7865',114,0,0,CURRENT_USER,CURRENT_TIMESTAMP,1,NEWID())

---Read Current Order--
CREATE PROCEDURE SP_Booking_Details (@book_ID varchar(11))
as
select * from book where BOOKING_ID=@book_ID
--EXEC--
EXEC SP_Booking_Details 101

---Reading user Order history--
CREATE PROCEDURE SP_user_order_history (@cus_ID varchar(11))
as
select * from book where CUS_NUMBER=@cus_ID

--EXEC--
EXEC SP_user_order_history 231



--master page-meiyyapan
--update
USE [mey_db]
GO
/** Object: StoredProcedure [dbo].[updatemaster] Script Date: 8/28/2021 3:24:38 PM **/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[updatemaster]
@VTYPE VARCHAR(30)
AS
UPDATE VECHILE_G
SET VTYPE = @VTYPE
WHERE VTYPE = 'TRUCK'



USE [mey_db]
GO
/** Object: StoredProcedure [dbo].[VECH_MASTER] Script Date: 8/28/2021 3:25:16 PM **/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[VECH_MASTER]
AS
SELECT * FROM VECHILE_G



---------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------
--MEYYAPAN---
---------------------------------------------------------------------------------------------------------------------------


CREATE TABLE VECHILE(VechileId varchar(15) primary key,VechileName varchar(20) not null,VechileType varchar(20) not null,BasePrice int not null,AdditionalPrice int,CreatedBy varchar(10),CreatedDate Date,ModifiedBy varchar(10),ModifiedDate Date,RecordStatus bit not null,RowGUID varchar(max));
select * from vechile
GO


--INSERT A NEW VECHILE INTO THE DB
CREATE PROCEDURE [dbo].[CREATE_VECHILE_MASTER]

@VechileId VARCHAR(15),
@VechileName VARCHAR(20),
@VechileType VARCHAR(20),
@BasePrice INT, 
@AdditionalPrice INT

AS
begin

INSERT INTO VECHILE VALUES(@VechileId,@VechileName,@VechileType,@BasePrice,@AdditionalPrice, CURRENT_USER, CURRENT_TIMESTAMP ,CURRENT_USER, CURRENT_TIMESTAMP, 1, NEWID())

end


exec create_vechile_master @VechileId = 'TN02AE3026',@VechileName = 'TATA MAGIC',@VechileType = 'MINI TRUCK',@BasePrice = 1200,@AdditionalPrice = 100;
exec create_vechile_master @VechileId = 'TN05BD7653',@VechileName = 'SUZUKI CARRY',@VechileType = 'MINI TRUCK',@BasePrice = 1000,@AdditionalPrice = 90;
exec create_vechile_master @VechileId = 'TN10L3026',@VechileName = 'PETERBILT',@VechileType = 'HEAVY TRUCK',@BasePrice = 3000,@AdditionalPrice = 500;
GO

--DELETE VECHILE FROM THE DB

CREATE PROCEDURE [dbo].[DELETE_VECHILE_MASTER]

@VechileId VARCHAR(15)

AS
begin

UPDATE VECHILE SET RecordStatus = 0,ModifiedBy = CURRENT_USER,ModifiedDate = CURRENT_TIMESTAMP WHERE  VechileId= @VechileId;
--delete from vechile where vechileid = @vechileid;

end


exec delete_vechile_master @VechileId = 'TN02AE3026';

go


--LIST ALL VECHILES
CREATE PROCEDURE [dbo].[LIST_VECHILE_MASTER]

AS
begin

SELECT * FROM VECHILE;

end


exec list_vechile_master;